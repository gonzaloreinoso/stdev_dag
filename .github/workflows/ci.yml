name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    name: Lint and Format
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install development dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
        
    - name: Run Black (formatting check)
      run: black --check --diff .
      
    - name: Run isort (import sorting check)
      run: isort --check-only --diff .
      
    - name: Run Flake8 (linting)
      run: flake8 .

  test:
    runs-on: ubuntu-latest
    name: Run Tests
    # needs: lint-and-format  # Temporarily disabled to allow tests to run even if linting fails
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: airflow
          POSTGRES_USER: airflow
          POSTGRES_DB: airflow
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install pytest pytest-cov pytest-mock
        
    - name: Run unit tests
      run: |
        pytest tests/unit/ -v --cov=plugins --cov-report=xml --cov-report=term
        
    - name: Run integration tests
      run: |
        pytest tests/integration/ -v
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  dag-validation:
    runs-on: ubuntu-latest
    name: Validate DAGs
    # needs: lint-and-format  # Temporarily disabled to allow validation to run even if linting fails
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Validate DAG syntax
      run: |
        python -m py_compile dags/*.py
        
    - name: Test DAG loading
      run: |
        export AIRFLOW_HOME=$(pwd)
        export AIRFLOW__CORE__DAGS_FOLDER=$(pwd)/dags
        export AIRFLOW__CORE__LOAD_EXAMPLES=False
        python -c "
        import sys
        sys.path.insert(0, '$(pwd)')
        from airflow.models import DagBag
        dag_bag = DagBag(dag_folder='dags/', include_examples=False)
        if dag_bag.import_errors:
            for filename, error in dag_bag.import_errors.items():
                print(f'DAG import error in {filename}: {error}')
            sys.exit(1)
        print(f'Successfully loaded {len(dag_bag.dags)} DAGs')
        "
